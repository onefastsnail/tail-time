// Code generated by MockGen. DO NOT EDIT.
// Source: destination.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	tale "tail-time/internal/tale"

	gomock "github.com/golang/mock/gomock"
)

// MockDestination is a mock of Destination interface.
type MockDestination struct {
	ctrl     *gomock.Controller
	recorder *MockDestinationMockRecorder
}

// MockDestinationMockRecorder is the mock recorder for MockDestination.
type MockDestinationMockRecorder struct {
	mock *MockDestination
}

// NewMockDestination creates a new mock instance.
func NewMockDestination(ctrl *gomock.Controller) *MockDestination {
	mock := &MockDestination{ctrl: ctrl}
	mock.recorder = &MockDestinationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDestination) EXPECT() *MockDestinationMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockDestination) Save(tale tale.Tale) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", tale)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockDestinationMockRecorder) Save(tale interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDestination)(nil).Save), tale)
}
